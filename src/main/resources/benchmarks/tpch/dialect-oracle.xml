<?xml version="1.0"?>
<dialects>
    <dialect type="ORACLE">

        <procedure name="Q1">
            <statement name="query_stmt">
                SELECT
                    l_returnflag,
                    l_linestatus,
                    SUM(l_quantity) AS sum_qty,
                    SUM(l_extendedprice) AS sum_base_price,
                    SUM(l_extendedprice * (1 - l_discount)) AS sum_disc_price,
                    SUM(l_extendedprice * (1 - l_discount) * (1 + l_tax)) AS sum_charge,
                    AVG(l_quantity) AS avg_qty,
                    AVG(l_extendedprice) AS avg_price,
                    AVG(l_discount) AS avg_disc,
                    COUNT(*) AS count_order
                FROM
                    lineitem
                WHERE
                    l_shipdate &lt;= DATE '1998-12-01' - INTERVAL '1' DAY * ?
                GROUP BY
                    l_returnflag,
                    l_linestatus
                ORDER BY
                    l_returnflag,
                    l_linestatus
            </statement>
        </procedure>

        <procedure name="Q2">
            <statement name="query_stmt">
                SELECT
                    s_acctbal,
                    s_name,
                    n_name,
                    p_partkey,
                    p_mfgr,
                    s_address,
                    s_phone,
                    s_comment
                FROM
                    part,
                    supplier,
                    partsupp,
                    nation,
                    region
                WHERE
                    p_partkey = ps_partkey
                    AND s_suppkey = ps_suppkey
                    AND p_size = ?
                    AND p_type LIKE ?
                    AND s_nationkey = n_nationkey
                    AND n_regionkey = r_regionkey
                    AND r_name = ?
                    AND ps_supplycost =
                    (
                    SELECT
                        MIN(ps_supplycost)
                    FROM
                        partsupp,
                        supplier,
                        nation,
                        region
                    WHERE
                        p_partkey = ps_partkey
                        AND s_suppkey = ps_suppkey
                        AND s_nationkey = n_nationkey
                        AND n_regionkey = r_regionkey
                        AND r_name = ?
                    )
                ORDER BY
                    s_acctbal DESC,
                    n_name,
                    s_name,
                    p_partkey
                FETCH FIRST 100 ROWS ONLY
            </statement>
        </procedure>

        <procedure name="Q3">
            <statement name="query_stmt">
                SELECT
                    l_orderkey,
                    SUM(l_extendedprice * (1 - l_discount)) AS revenue,
                    o_orderdate,
                    o_shippriority
                FROM
                    customer,
                    orders,
                    lineitem
                WHERE
                    c_mktsegment = ?
                    AND c_custkey = o_custkey
                    AND l_orderkey = o_orderkey
                    AND o_orderdate &lt; ?
                    AND l_shipdate > ?
                GROUP BY
                    l_orderkey,
                    o_orderdate,
                    o_shippriority
                ORDER BY
                    revenue DESC,
                    o_orderdate
                FETCH FIRST 10 ROWS ONLY
            </statement>
        </procedure>

        <procedure name="Q4">
            <statement name="query_stmt">
                SELECT
                    o_orderpriority,
                    COUNT(*) AS order_count
                FROM
                    orders
                WHERE
                    o_orderdate >= ?
                    AND o_orderdate &lt; ? + INTERVAL '3' MONTH
                    AND EXISTS
                    (
                    SELECT
                        *
                    FROM
                        lineitem
                    WHERE
                        l_orderkey = o_orderkey
                        AND l_commitdate &lt; l_receiptdate
                    )
                GROUP BY
                    o_orderpriority
                ORDER BY
                    o_orderpriority
            </statement>
        </procedure>

        <procedure name="Q5">
            <statement name="query_stmt">
                SELECT
                    n_name,
                    SUM(l_extendedprice * (1 - l_discount)) AS revenue
                FROM
                    customer,
                    orders,
                    lineitem,
                    supplier,
                    nation,
                    region
                WHERE
                    c_custkey = o_custkey
                    AND l_orderkey = o_orderkey
                    AND l_suppkey = s_suppkey
                    AND c_nationkey = s_nationkey
                    AND s_nationkey = n_nationkey
                    AND n_regionkey = r_regionkey
                    AND r_name = ?
                    AND o_orderdate >= ?
                    AND o_orderdate &lt; ? + INTERVAL '1' YEAR
                GROUP BY
                    n_name
                ORDER BY
                    revenue DESC
            </statement>
        </procedure>

        <procedure name="Q6">
            <statement name="query_stmt">
                SELECT
                    SUM(l_extendedprice * l_discount) AS revenue
                FROM
                    lineitem
                WHERE
                    l_shipdate >= ?
                    AND l_shipdate &lt; ? + INTERVAL '1' YEAR
                    AND l_discount BETWEEN ? - 0.01 AND ? + 0.01
                    AND l_quantity &lt; ?
            </statement>
        </procedure>

        <procedure name="Q7">
            <statement name="query_stmt">
                SELECT
                    supp_nation,
                    cust_nation,
                    l_year,
                    SUM(volume) AS revenue
                FROM
                    (
                    SELECT
                        n1.n_name AS supp_nation,
                        n2.n_name AS cust_nation,
                        EXTRACT(YEAR
                    FROM
                        l_shipdate) AS l_year,
                        l_extendedprice * (1 - l_discount) AS volume
                    FROM
                        supplier,
                        lineitem,
                        orders,
                        customer,
                        nation n1,
                        nation n2
                    WHERE
                        s_suppkey = l_suppkey
                        AND o_orderkey = l_orderkey
                        AND c_custkey = o_custkey
                        AND s_nationkey = n1.n_nationkey
                        AND c_nationkey = n2.n_nationkey
                        AND
                        (
                            (n1.n_name = ? AND n2.n_name = ?)
                            OR
                            (n1.n_name = ? AND n2.n_name = ?)
                        )
                        AND l_shipdate BETWEEN DATE '1995-01-01' AND DATE '1996-12-31'
                    )
                    shipping
                GROUP BY
                    supp_nation,
                    cust_nation,
                    l_year
                ORDER BY
                    supp_nation,
                    cust_nation,
                    l_year
            </statement>
        </procedure>

        <procedure name="Q8">
            <statement name="query_stmt">
                SELECT
                    o_year,
                    SUM(
                    CASE
                    WHEN
                        nation = ?
                    THEN
                        volume
                    ELSE
                        0
                    END
                ) / SUM(volume) AS mkt_share
                FROM
                    (
                    SELECT
                        EXTRACT(YEAR
                    FROM
                        o_orderdate) AS o_year,
                        l_extendedprice * (1 - l_discount) AS volume,
                        n2.n_name AS nation
                    FROM
                        part,
                        supplier,
                        lineitem,
                        orders,
                        customer,
                        nation n1,
                        nation n2,
                        region
                    WHERE
                        p_partkey = l_partkey
                        AND s_suppkey = l_suppkey
                        AND l_orderkey = o_orderkey
                        AND o_custkey = c_custkey
                        AND c_nationkey = n1.n_nationkey
                        AND n1.n_regionkey = r_regionkey
                        AND r_name = ?
                        AND s_nationkey = n2.n_nationkey
                        AND o_orderdate BETWEEN DATE '1995-01-01' AND DATE '1996-12-31'
                        AND p_type = ?
                    )
                    all_nations
                GROUP BY
                    o_year
                ORDER BY
                    o_year
            </statement>
        </procedure>

        <procedure name="Q9">
            <statement name="query_stmt">
                SELECT
                    nation,
                    o_year,
                    SUM(amount) AS sum_profit
                FROM
                    (
                        SELECT
                            n_name AS nation,
                            EXTRACT(YEAR
                                FROM
                                    o_orderdate) AS o_year,
                            l_extendedprice * (1 - l_discount) - ps_supplycost * l_quantity AS amount
                        FROM
                            part,
                            supplier,
                            lineitem,
                            partsupp,
                            orders,
                            nation
                        WHERE
                            s_suppkey = l_suppkey
                            AND ps_suppkey = l_suppkey
                            AND ps_partkey = l_partkey
                            AND p_partkey = l_partkey
                            AND o_orderkey = l_orderkey
                            AND s_nationkey = n_nationkey
                            AND p_name LIKE ?
                    )
                    profit
                GROUP BY
                    nation,
                    o_year
                ORDER BY
                    nation,
                    o_year DESC
            </statement>
        </procedure>

        <procedure name="Q10">
            <statement name="query_stmt">
                SELECT
                    c_custkey,
                    c_name,
                    SUM(l_extendedprice * (1 - l_discount)) AS revenue,
                    c_acctbal,
                    n_name,
                    c_address,
                    c_phone,
                    c_comment
                FROM
                    customer,
                    orders,
                    lineitem,
                    nation
                WHERE
                    c_custkey = o_custkey
                    AND l_orderkey = o_orderkey
                    AND o_orderdate >= ?
                    AND o_orderdate &lt; ? + INTERVAL '3' MONTH
                    AND l_returnflag = 'R'
                    AND c_nationkey = n_nationkey
                GROUP BY
                    c_custkey,
                    c_name,
                    c_acctbal,
                    c_phone,
                    n_name,
                    c_address,
                    c_comment
                ORDER BY
                    revenue DESC
                FETCH FIRST 20 ROWS ONLY
            </statement>
        </procedure>

        <procedure name="Q12">
            <statement name="query_stmt">
                SELECT
                    l_shipmode,
                    SUM(
                        CASE
                            WHEN
                                o_orderpriority = '1-URGENT' OR o_orderpriority = '2-HIGH'
                            THEN
                                1
                            ELSE
                                0
                        END
                    ) AS high_line_count,
                    SUM(
                        CASE
                            WHEN
                                o_orderpriority &lt;> '1-URGENT' AND o_orderpriority &lt;> '2-HIGH'
                            THEN
                                1
                            ELSE
                                0
                        END
                    ) AS low_line_count
                FROM
                    orders,
                    lineitem
                WHERE
                    o_orderkey = l_orderkey
                    AND l_shipmode IN (?, ?)
                    AND l_commitdate &lt; l_receiptdate
                    AND l_shipdate &lt; l_commitdate
                    AND l_receiptdate >= ?
                    AND l_receiptdate &lt; ? + INTERVAL '1' YEAR
                GROUP BY
                    l_shipmode
                ORDER BY
                    l_shipmode
            </statement>
        </procedure>

        <procedure name="Q13">
            <statement name="query_stmt">
                SELECT
                    c_count,
                    COUNT(*) AS custdist
                FROM
                    (
                    SELECT
                        c_custkey,
                        COUNT(o_orderkey) AS c_count
                    FROM
                        customer
                        LEFT OUTER JOIN
                            orders
                            ON c_custkey = o_custkey
                            AND o_comment NOT LIKE ?
                    GROUP BY
                        c_custkey
                    )
                    c_orders
                GROUP BY
                    c_count
                ORDER BY
                    custdist DESC,
                    c_count DESC
            </statement>
        </procedure>

        <procedure name="Q14">
            <statement name="query_stmt">
                SELECT
                    100.00 * SUM(
                        CASE
                            WHEN
                                p_type LIKE 'PROMO%'
                            THEN
                                l_extendedprice * (1 - l_discount)
                            ELSE
                                0
                            END
                ) / SUM(l_extendedprice * (1 - l_discount)) AS promo_revenue
                FROM
                    lineitem, part
                WHERE
                    l_partkey = p_partkey
                    AND l_shipdate >= ?
                    AND l_shipdate &lt; ? + INTERVAL '1' MONTH
            </statement>
        </procedure>

        <procedure name="Q18">
            <statement name="query_stmt">
                SELECT
                    c_name,
                    c_custkey,
                    o_orderkey,
                    o_orderdate,
                    o_totalprice,
                    SUM(l_quantity)
                FROM
                    customer,
                    orders,
                    lineitem
                WHERE
                    o_orderkey IN
                    (
                        SELECT
                            l_orderkey
                        FROM
                            lineitem
                        GROUP BY
                            l_orderkey
                        HAVING
                            SUM(l_quantity) > ?
                    )
                    AND c_custkey = o_custkey
                    AND o_orderkey = l_orderkey
                GROUP BY
                    c_name,
                    c_custkey,
                    o_orderkey,
                    o_orderdate,
                    o_totalprice
                ORDER BY
                    o_totalprice DESC,
                    o_orderdate
                FETCH FIRST 100 ROWS ONLY
            </statement>
        </procedure>

        <procedure name="Q20">
            <statement name="query_stmt">
                SELECT
                    s_name,
                    s_address
                FROM
                    supplier,
                    nation
                WHERE
                    s_suppkey IN
                    (
                    SELECT
                        ps_suppkey
                    FROM
                        partsupp
                    WHERE
                        ps_partkey IN
                        (
                            SELECT
                                p_partkey
                            FROM
                                part
                            WHERE
                                p_name LIKE ?
                        )
                        AND ps_availqty > (
                        SELECT
                            0.5 * SUM(l_quantity)
                        FROM
                            lineitem
                        WHERE
                            l_partkey = ps_partkey
                            AND l_suppkey = ps_suppkey
                            AND l_shipdate >= ?
                            AND l_shipdate &lt; ? + INTERVAL '1' YEAR )
                    )
                    AND s_nationkey = n_nationkey
                    AND n_name = ?
                ORDER BY
                    s_name
            </statement>
        </procedure>

        <procedure name="Q21">
            <statement name="query_stmt">
                SELECT
                    s_name,
                    COUNT(*) AS numwait
                FROM
                    supplier,
                    lineitem l1,
                    orders,
                    nation
                WHERE
                    s_suppkey = l1.l_suppkey
                    AND o_orderkey = l1.l_orderkey
                    AND o_orderstatus = 'F'
                    AND l1.l_receiptdate > l1.l_commitdate
                    AND EXISTS
                    (
                        SELECT
                            *
                        FROM
                            lineitem l2
                        WHERE
                            l2.l_orderkey = l1.l_orderkey
                            AND l2.l_suppkey &lt;> l1.l_suppkey
                    )
                    AND NOT EXISTS
                    (
                    SELECT
                        *
                    FROM
                        lineitem l3
                    WHERE
                        l3.l_orderkey = l1.l_orderkey
                        AND l3.l_suppkey &lt;> l1.l_suppkey
                        AND l3.l_receiptdate > l3.l_commitdate
                    )
                    AND s_nationkey = n_nationkey
                    AND n_name = ?
                GROUP BY
                    s_name
                ORDER BY
                    numwait DESC,
                    s_name
                FETCH FIRST 100 ROWS ONLY
            </statement>
        </procedure>

        <procedure name="Q22">
            <statement name="query_stmt">
                SELECT
                    cntrycode,
                    COUNT(*) AS numcust,
                    SUM(c_acctbal) AS totacctbal
                FROM
                    (
                        SELECT
                            SUBSTR(c_phone, 1, 2) AS cntrycode,
                            c_acctbal
                        FROM
                            customer
                        WHERE
                            SUBSTR(c_phone, 1, 2) IN (?, ?, ?, ?, ?, ?, ?)
                            AND c_acctbal >
                            (
                                SELECT
                                    AVG(c_acctbal)
                                FROM
                                    customer
                                WHERE
                                    c_acctbal > 0.00
                                    AND SUBSTR(c_phone, 1, 2) IN (?, ?, ?, ?, ?, ?, ?)
                            )
                            AND NOT EXISTS
                            (
                                SELECT
                                    *
                                FROM
                                    orders
                                WHERE
                                    o_custkey = c_custkey
                            )
                    )
                    custsale
                GROUP BY
                    cntrycode
                ORDER BY
                    cntrycode
            </statement>
        </procedure>
        
    </dialect>
</dialects>
