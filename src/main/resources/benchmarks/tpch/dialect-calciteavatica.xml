<?xml version="1.0"?>
<dialects>
    <dialect type="CALCITEAVATICA">
        <procedure name="Q1">
            <statement name="query_stmt">
                SELECT
                "l_returnflag",
                "l_linestatus",
                SUM("l_quantity") AS sum_qty,
                SUM("l_extendedprice") AS sum_base_price,
                SUM("l_extendedprice" * (1 - "l_discount")) AS sum_disc_price,
                SUM("l_extendedprice" * (1 - "l_discount") * (1 + "l_tax")) AS sum_charge,
                AVG("l_quantity") AS avg_qty,
                AVG("l_extendedprice") AS avg_price,
                AVG("l_discount") AS avg_disc,
                COUNT(*) AS count_order
                FROM
                "benchbase"."lineitem"
                WHERE
                "l_shipdate" &lt;= DATE '1998-12-01' - INTERVAL 1 DAY
                GROUP BY
                "l_returnflag",
                "l_linestatus"
                ORDER BY
                "l_returnflag",
                "l_linestatus"
            </statement>
        </procedure>

        <procedure name="Q2">
            <statement name="query_stmt">
                SELECT
                "s_acctbal",
                "s_name",
                "n_name",
                "p_partkey",
                "p_mfgr",
                "s_address",
                "s_phone",
                "s_comment"
                FROM
                "benchbase"."part",
                "benchbase"."supplier",
                "benchbase"."partsupp",
                "benchbase"."nation",
                "benchbase"."region"
                WHERE
                "p_partkey" = "ps_partkey"
                AND "s_suppkey" = "ps_suppkey"
                AND "p_size" = 25
                AND "p_type" LIKE '%STEEL'
                AND "s_nationkey" = "n_nationkey"
                AND "n_regionkey" = "r_regionkey"
                AND "r_name" = 'AMERICA'
                AND "ps_supplycost" =
                (
                SELECT
                MIN("ps_supplycost")
                FROM
                "benchbase"."partsupp",
                "benchbase"."supplier",
                "benchbase"."nation",
                "benchbase"."region"
                WHERE
                "p_partkey" = "ps_partkey"
                AND "s_suppkey" = "ps_suppkey"
                AND "s_nationkey" = "n_nationkey"
                AND "n_regionkey" = "r_regionkey"
                AND "r_name" = 'AMERICA'
                )
                ORDER BY
                "s_acctbal" DESC,
                "n_name",
                "s_name",
                "p_partkey" LIMIT 100
            </statement>
        </procedure>

        <procedure name="Q3">
            <statement name="query_stmt">
                SELECT
                "l_returnflag",
                "l_linestatus",
                SUM("l_quantity") AS sum_qty,
                SUM("l_extendedprice") AS sum_base_price,
                SUM("l_extendedprice" * (1 - "l_discount")) AS sum_disc_price,
                SUM("l_extendedprice" * (1 - "l_discount") * (1 + "l_tax")) AS sum_charge,
                AVG("l_quantity") AS avg_qty,
                AVG("l_extendedprice") AS avg_price,
                AVG("l_discount") AS avg_disc,
                COUNT(*) AS count_order
                FROM
                "benchbase"."lineitem"
                WHERE
                "l_shipdate" &lt;= DATE '1998-12-01' - INTERVAL 1 DAY
                GROUP BY
                "l_returnflag",
                "l_linestatus"
                ORDER BY
                "l_returnflag",
                "l_linestatus"
            </statement>
        </procedure>

        <procedure name="Q4">
            <statement name="query_stmt">
                SELECT
                "o_orderpriority",
                COUNT(*) AS order_count
                FROM
                "benchbase"."orders"
                WHERE
                "o_orderdate" &gt;= DATE '1993-01-01'
                AND "o_orderdate" &lt; DATE '1993-01-01' + INTERVAL '3' MONTH
                AND EXISTS
                (
                SELECT
                *
                FROM
                "benchbase"."lineitem"
                WHERE
                "l_orderkey" = "o_orderkey"
                AND "l_commitdate" &lt; "l_receiptdate"
                )
                GROUP BY
                "o_orderpriority"
                ORDER BY
                "o_orderpriority"
            </statement>
        </procedure>

        <procedure name="Q5">
            <statement name="query_stmt">
                SELECT
                "l_returnflag",
                "l_linestatus",
                SUM("l_quantity") AS sum_qty,
                SUM("l_extendedprice") AS sum_base_price,
                SUM("l_extendedprice" * (1 - "l_discount")) AS sum_disc_price,
                SUM("l_extendedprice" * (1 - "l_discount") * (1 + "l_tax")) AS sum_charge,
                AVG("l_quantity") AS avg_qty,
                AVG("l_extendedprice") AS avg_price,
                AVG("l_discount") AS avg_disc,
                COUNT(*) AS count_order
                FROM
                "benchbase"."lineitem"
                WHERE
                "l_shipdate" &lt;= DATE '1998-12-01' - INTERVAL 1 DAY
                GROUP BY
                "l_returnflag",
                "l_linestatus"
                ORDER BY
                "l_returnflag",
                "l_linestatus"
            </statement>
        </procedure>

        <procedure name="Q6">
            <statement name="query_stmt">
                SELECT
                SUM("l_extendedprice" * "l_discount") AS revenue
                FROM
                "benchbase"."lineitem"
                WHERE
                "l_shipdate" &gt;= DATE '1993-01-01'
                AND "l_shipdate" &lt; DATE '1993-01-01' + INTERVAL '1' YEAR
                AND "l_discount" BETWEEN 0.02 - 0.01 AND 0.02 + 0.01
                AND "l_quantity" &lt; 24
            </statement>
        </procedure>

        <procedure name="Q7">
            <statement name="query_stmt">
                SELECT
                "l_returnflag",
                "l_linestatus",
                SUM("l_quantity") AS sum_qty,
                SUM("l_extendedprice") AS sum_base_price,
                SUM("l_extendedprice" * (1 - "l_discount")) AS sum_disc_price,
                SUM("l_extendedprice" * (1 - "l_discount") * (1 + "l_tax")) AS sum_charge,
                AVG("l_quantity") AS avg_qty,
                AVG("l_extendedprice") AS avg_price,
                AVG("l_discount") AS avg_disc,
                COUNT(*) AS count_order
                FROM
                "benchbase"."lineitem"
                WHERE
                "l_shipdate" &lt;= DATE '1998-12-01' - INTERVAL 1 DAY
                GROUP BY
                "l_returnflag",
                "l_linestatus"
                ORDER BY
                "l_returnflag",
                "l_linestatus"
            </statement>
        </procedure>

        <procedure name="Q8">
            <statement name="query_stmt">
                SELECT
                "l_returnflag",
                "l_linestatus",
                SUM("l_quantity") AS sum_qty,
                SUM("l_extendedprice") AS sum_base_price,
                SUM("l_extendedprice" * (1 - "l_discount")) AS sum_disc_price,
                SUM("l_extendedprice" * (1 - "l_discount") * (1 + "l_tax")) AS sum_charge,
                AVG("l_quantity") AS avg_qty,
                AVG("l_extendedprice") AS avg_price,
                AVG("l_discount") AS avg_disc,
                COUNT(*) AS count_order
                FROM
                "benchbase"."lineitem"
                WHERE
                "l_shipdate" &lt;= DATE '1998-12-01' - INTERVAL 1 DAY
                GROUP BY
                "l_returnflag",
                "l_linestatus"
                ORDER BY
                "l_returnflag",
                "l_linestatus"
            </statement>
        </procedure>

        <procedure name="Q9">
            <statement name="query_stmt">
                SELECT
                "l_returnflag",
                "l_linestatus",
                SUM("l_quantity") AS sum_qty,
                SUM("l_extendedprice") AS sum_base_price,
                SUM("l_extendedprice" * (1 - "l_discount")) AS sum_disc_price,
                SUM("l_extendedprice" * (1 - "l_discount") * (1 + "l_tax")) AS sum_charge,
                AVG("l_quantity") AS avg_qty,
                AVG("l_extendedprice") AS avg_price,
                AVG("l_discount") AS avg_disc,
                COUNT(*) AS count_order
                FROM
                "benchbase"."lineitem"
                WHERE
                "l_shipdate" &lt;= DATE '1998-12-01' - INTERVAL 1 DAY
                GROUP BY
                "l_returnflag",
                "l_linestatus"
                ORDER BY
                "l_returnflag",
                "l_linestatus"
            </statement>
        </procedure>

        <procedure name="Q10">
            <statement name="query_stmt">
                SELECT
                "l_returnflag",
                "l_linestatus",
                SUM("l_quantity") AS sum_qty,
                SUM("l_extendedprice") AS sum_base_price,
                SUM("l_extendedprice" * (1 - "l_discount")) AS sum_disc_price,
                SUM("l_extendedprice" * (1 - "l_discount") * (1 + "l_tax")) AS sum_charge,
                AVG("l_quantity") AS avg_qty,
                AVG("l_extendedprice") AS avg_price,
                AVG("l_discount") AS avg_disc,
                COUNT(*) AS count_order
                FROM
                "benchbase"."lineitem"
                WHERE
                "l_shipdate" &lt;= DATE '1998-12-01' - INTERVAL 1 DAY
                GROUP BY
                "l_returnflag",
                "l_linestatus"
                ORDER BY
                "l_returnflag",
                "l_linestatus"
            </statement>
        </procedure>

        <procedure name="Q11">
            <statement name="query_stmt">
                SELECT
                "l_returnflag",
                "l_linestatus",
                SUM("l_quantity") AS sum_qty,
                SUM("l_extendedprice") AS sum_base_price,
                SUM("l_extendedprice" * (1 - "l_discount")) AS sum_disc_price,
                SUM("l_extendedprice" * (1 - "l_discount") * (1 + "l_tax")) AS sum_charge,
                AVG("l_quantity") AS avg_qty,
                AVG("l_extendedprice") AS avg_price,
                AVG("l_discount") AS avg_disc,
                COUNT(*) AS count_order
                FROM
                "benchbase"."lineitem"
                WHERE
                "l_shipdate" &lt;= DATE '1998-12-01' - INTERVAL 1 DAY
                GROUP BY
                "l_returnflag",
                "l_linestatus"
                ORDER BY
                "l_returnflag",
                "l_linestatus"
            </statement>
        </procedure>

        <procedure name="Q12">
            <statement name="query_stmt">
                SELECT
                "l_returnflag",
                "l_linestatus",
                SUM("l_quantity") AS sum_qty,
                SUM("l_extendedprice") AS sum_base_price,
                SUM("l_extendedprice" * (1 - "l_discount")) AS sum_disc_price,
                SUM("l_extendedprice" * (1 - "l_discount") * (1 + "l_tax")) AS sum_charge,
                AVG("l_quantity") AS avg_qty,
                AVG("l_extendedprice") AS avg_price,
                AVG("l_discount") AS avg_disc,
                COUNT(*) AS count_order
                FROM
                "benchbase"."lineitem"
                WHERE
                "l_shipdate" &lt;= DATE '1998-12-01' - INTERVAL 1 DAY
                GROUP BY
                "l_returnflag",
                "l_linestatus"
                ORDER BY
                "l_returnflag",
                "l_linestatus"
            </statement>
        </procedure>

        <procedure name="Q13">
            <statement name="query_stmt">
                SELECT
                "l_returnflag",
                "l_linestatus",
                SUM("l_quantity") AS sum_qty,
                SUM("l_extendedprice") AS sum_base_price,
                SUM("l_extendedprice" * (1 - "l_discount")) AS sum_disc_price,
                SUM("l_extendedprice" * (1 - "l_discount") * (1 + "l_tax")) AS sum_charge,
                AVG("l_quantity") AS avg_qty,
                AVG("l_extendedprice") AS avg_price,
                AVG("l_discount") AS avg_disc,
                COUNT(*) AS count_order
                FROM
                "benchbase"."lineitem"
                WHERE
                "l_shipdate" &lt;= DATE '1998-12-01' - INTERVAL 1 DAY
                GROUP BY
                "l_returnflag",
                "l_linestatus"
                ORDER BY
                "l_returnflag",
                "l_linestatus"
            </statement>
        </procedure>

        <procedure name="Q14">
            <statement name="query_stmt">
                SELECT
                "l_returnflag",
                "l_linestatus",
                SUM("l_quantity") AS sum_qty,
                SUM("l_extendedprice") AS sum_base_price,
                SUM("l_extendedprice" * (1 - "l_discount")) AS sum_disc_price,
                SUM("l_extendedprice" * (1 - "l_discount") * (1 + "l_tax")) AS sum_charge,
                AVG("l_quantity") AS avg_qty,
                AVG("l_extendedprice") AS avg_price,
                AVG("l_discount") AS avg_disc,
                COUNT(*) AS count_order
                FROM
                "benchbase"."lineitem"
                WHERE
                "l_shipdate" &lt;= DATE '1998-12-01' - INTERVAL 1 DAY
                GROUP BY
                "l_returnflag",
                "l_linestatus"
                ORDER BY
                "l_returnflag",
                "l_linestatus"
            </statement>
        </procedure>

        <procedure name="Q15">
            <statement name="query_stmt">
                SELECT
                "l_returnflag",
                "l_linestatus",
                SUM("l_quantity") AS sum_qty,
                SUM("l_extendedprice") AS sum_base_price,
                SUM("l_extendedprice" * (1 - "l_discount")) AS sum_disc_price,
                SUM("l_extendedprice" * (1 - "l_discount") * (1 + "l_tax")) AS sum_charge,
                AVG("l_quantity") AS avg_qty,
                AVG("l_extendedprice") AS avg_price,
                AVG("l_discount") AS avg_disc,
                COUNT(*) AS count_order
                FROM
                "benchbase"."lineitem"
                WHERE
                "l_shipdate" &lt;= DATE '1998-12-01' - INTERVAL 1 DAY
                GROUP BY
                "l_returnflag",
                "l_linestatus"
                ORDER BY
                "l_returnflag",
                "l_linestatus"
            </statement>
        </procedure>

        <procedure name="Q16">
            <statement name="query_stmt">
                SELECT
                "l_returnflag",
                "l_linestatus",
                SUM("l_quantity") AS sum_qty,
                SUM("l_extendedprice") AS sum_base_price,
                SUM("l_extendedprice" * (1 - "l_discount")) AS sum_disc_price,
                SUM("l_extendedprice" * (1 - "l_discount") * (1 + "l_tax")) AS sum_charge,
                AVG("l_quantity") AS avg_qty,
                AVG("l_extendedprice") AS avg_price,
                AVG("l_discount") AS avg_disc,
                COUNT(*) AS count_order
                FROM
                "benchbase"."lineitem"
                WHERE
                "l_shipdate" &lt;= DATE '1998-12-01' - INTERVAL 1 DAY
                GROUP BY
                "l_returnflag",
                "l_linestatus"
                ORDER BY
                "l_returnflag",
                "l_linestatus"
            </statement>
        </procedure>

        <procedure name="Q17">
            <statement name="query_stmt">
                SELECT
                "l_returnflag",
                "l_linestatus",
                SUM("l_quantity") AS sum_qty,
                SUM("l_extendedprice") AS sum_base_price,
                SUM("l_extendedprice" * (1 - "l_discount")) AS sum_disc_price,
                SUM("l_extendedprice" * (1 - "l_discount") * (1 + "l_tax")) AS sum_charge,
                AVG("l_quantity") AS avg_qty,
                AVG("l_extendedprice") AS avg_price,
                AVG("l_discount") AS avg_disc,
                COUNT(*) AS count_order
                FROM
                "benchbase"."lineitem"
                WHERE
                "l_shipdate" &lt;= DATE '1998-12-01' - INTERVAL 1 DAY
                GROUP BY
                "l_returnflag",
                "l_linestatus"
                ORDER BY
                "l_returnflag",
                "l_linestatus"
            </statement>
        </procedure>

        <procedure name="Q18">
            <statement name="query_stmt">
                SELECT
                "l_returnflag",
                "l_linestatus",
                SUM("l_quantity") AS sum_qty,
                SUM("l_extendedprice") AS sum_base_price,
                SUM("l_extendedprice" * (1 - "l_discount")) AS sum_disc_price,
                SUM("l_extendedprice" * (1 - "l_discount") * (1 + "l_tax")) AS sum_charge,
                AVG("l_quantity") AS avg_qty,
                AVG("l_extendedprice") AS avg_price,
                AVG("l_discount") AS avg_disc,
                COUNT(*) AS count_order
                FROM
                "benchbase"."lineitem"
                WHERE
                "l_shipdate" &lt;= DATE '1998-12-01' - INTERVAL 1 DAY
                GROUP BY
                "l_returnflag",
                "l_linestatus"
                ORDER BY
                "l_returnflag",
                "l_linestatus"
            </statement>
        </procedure>

        <procedure name="Q19">
            <statement name="query_stmt">
                SELECT
                "l_returnflag",
                "l_linestatus",
                SUM("l_quantity") AS sum_qty,
                SUM("l_extendedprice") AS sum_base_price,
                SUM("l_extendedprice" * (1 - "l_discount")) AS sum_disc_price,
                SUM("l_extendedprice" * (1 - "l_discount") * (1 + "l_tax")) AS sum_charge,
                AVG("l_quantity") AS avg_qty,
                AVG("l_extendedprice") AS avg_price,
                AVG("l_discount") AS avg_disc,
                COUNT(*) AS count_order
                FROM
                "benchbase"."lineitem"
                WHERE
                "l_shipdate" &lt;= DATE '1998-12-01' - INTERVAL 1 DAY
                GROUP BY
                "l_returnflag",
                "l_linestatus"
                ORDER BY
                "l_returnflag",
                "l_linestatus"
            </statement>
        </procedure>

        <procedure name="Q20">
            <statement name="query_stmt">
                SELECT
                "l_returnflag",
                "l_linestatus",
                SUM("l_quantity") AS sum_qty,
                SUM("l_extendedprice") AS sum_base_price,
                SUM("l_extendedprice" * (1 - "l_discount")) AS sum_disc_price,
                SUM("l_extendedprice" * (1 - "l_discount") * (1 + "l_tax")) AS sum_charge,
                AVG("l_quantity") AS avg_qty,
                AVG("l_extendedprice") AS avg_price,
                AVG("l_discount") AS avg_disc,
                COUNT(*) AS count_order
                FROM
                "benchbase"."lineitem"
                WHERE
                "l_shipdate" &lt;= DATE '1998-12-01' - INTERVAL 1 DAY
                GROUP BY
                "l_returnflag",
                "l_linestatus"
                ORDER BY
                "l_returnflag",
                "l_linestatus"
            </statement>
        </procedure>

        <procedure name="Q21">
            <statement name="query_stmt">
                SELECT
                "l_returnflag",
                "l_linestatus",
                SUM("l_quantity") AS sum_qty,
                SUM("l_extendedprice") AS sum_base_price,
                SUM("l_extendedprice" * (1 - "l_discount")) AS sum_disc_price,
                SUM("l_extendedprice" * (1 - "l_discount") * (1 + "l_tax")) AS sum_charge,
                AVG("l_quantity") AS avg_qty,
                AVG("l_extendedprice") AS avg_price,
                AVG("l_discount") AS avg_disc,
                COUNT(*) AS count_order
                FROM
                "benchbase"."lineitem"
                WHERE
                "l_shipdate" &lt;= DATE '1998-12-01' - INTERVAL 1 DAY
                GROUP BY
                "l_returnflag",
                "l_linestatus"
                ORDER BY
                "l_returnflag",
                "l_linestatus"
            </statement>
        </procedure>

        <procedure name="Q22">
            <statement name="query_stmt">
                SELECT
                "l_returnflag",
                "l_linestatus",
                SUM("l_quantity") AS sum_qty,
                SUM("l_extendedprice") AS sum_base_price,
                SUM("l_extendedprice" * (1 - "l_discount")) AS sum_disc_price,
                SUM("l_extendedprice" * (1 - "l_discount") * (1 + "l_tax")) AS sum_charge,
                AVG("l_quantity") AS avg_qty,
                AVG("l_extendedprice") AS avg_price,
                AVG("l_discount") AS avg_disc,
                COUNT(*) AS count_order
                FROM
                "benchbase"."lineitem"
                WHERE
                "l_shipdate" &lt;= DATE '1998-12-01' - INTERVAL 1 DAY
                GROUP BY
                "l_returnflag",
                "l_linestatus"
                ORDER BY
                "l_returnflag",
                "l_linestatus"
            </statement>
        </procedure>

    </dialect>
</dialects>
