<?xml version="1.0"?>
<dialects>
    <dialect type="CALCITEAVATICA">
        <procedure name="Q1">
            <statement name="query_stmt">
                SELECT
                    "l_returnflag",
                    "l_linestatus",
                    SUM("l_quantity") AS sum_qty,
                    SUM("l_extendedprice") AS sum_base_price,
                    SUM("l_extendedprice" * (1 - "l_discount")) AS sum_disc_price,
                    SUM("l_extendedprice" * (1 - "l_discount") * (1 + "l_tax")) AS sum_charge,
                    AVG("l_quantity") AS avg_qty,
                    AVG("l_extendedprice") AS avg_price,
                    AVG("l_discount") AS avg_disc,
                    COUNT(*) AS count_order
                FROM
                    "benchbase"."lineitem"
                WHERE
                    "l_shipdate" &lt;= DATE '1998-12-01' - INTERVAL ? DAY
                GROUP BY
                    "l_returnflag",
                    "l_linestatus"
                ORDER BY
                    "l_returnflag",
                    "l_linestatus"
            </statement>
        </procedure>

        <procedure name="Q2">
            <statement name="query_stmt">
                SELECT
                "s_acctbal",
                "s_name",
                "n_name",
                "p_partkey",
                "p_mfgr",
                "s_address",
                "s_phone",
                "s_comment"
                FROM
                "benchbase"."part",
                "benchbase"."supplier",
                "benchbase"."partsupp",
                "benchbase"."nation",
                "benchbase"."region"
                WHERE
                "p_partkey" = "ps_partkey"
                AND "s_suppkey" = "ps_suppkey"
                AND "p_size" = (CAST (? AS INT))
                AND "p_type" LIKE (CAST (? AS VARCHAR))
                AND "s_nationkey" = "n_nationkey"
                AND "n_regionkey" = "r_regionkey"
                AND "r_name" = (CAST (? AS VARCHAR))
                AND "ps_supplycost" =
                (
                SELECT
                MIN("ps_supplycost")
                FROM
                "benchbase"."partsupp",
                "benchbase"."supplier",
                "benchbase"."nation",
                "benchbase"."region"
                WHERE
                "p_partkey" = "ps_partkey"
                AND "s_suppkey" = "ps_suppkey"
                AND "s_nationkey" = "n_nationkey"
                AND "n_regionkey" = "r_regionkey"
                AND "r_name" = (CAST (? AS VARCHAR))
                )
                ORDER BY
                "s_acctbal" DESC,
                "n_name",
                "s_name",
                "p_partkey" LIMIT 100
            </statement>
        </procedure>

        <procedure name="Q3">
            <statement name="query_stmt">
                SELECT
                    "l_orderkey",
                    SUM("l_extendedprice" * (1 - "l_discount")) AS revenue,
                    "o_orderdate",
                    "o_shippriority"
                FROM
                    "benchbase"."customer",
                    "benchbase"."orders",
                    "benchbase"."lineitem"
                WHERE
                    "c_mktsegment" = (CAST (? AS VARCHAR))
                    AND "c_custkey" = "o_custkey"
                    AND "l_orderkey" = "o_orderkey"
                    AND "o_orderdate" &lt; TO_DATE(?, 'YYYY-MM-DD')
                    AND "l_shipdate" > TO_DATE(?, 'YYYY-MM-DD')
                GROUP BY
                    "l_orderkey",
                    "o_orderdate",
                    "o_shippriority"
                ORDER BY
                    2 DESC,
                    "o_orderdate" LIMIT 10
            </statement>
        </procedure>

        <procedure name="Q4">
            <statement name="query_stmt">
                SELECT
                    "o_orderpriority",
                    COUNT(*) AS order_count
                FROM
                    "benchbase"."orders"
                WHERE
                    "o_orderdate" &gt;= TO_DATE(?, 'YYYY-MM-DD')
                    AND "o_orderdate" &lt; TO_DATE(?, 'YYYY-MM-DD') + INTERVAL '3' MONTH
                    AND EXISTS
                    (
                        SELECT
                            *
                        FROM
                            "benchbase"."lineitem"
                        WHERE
                            "l_orderkey" = "o_orderkey"
                            AND "l_commitdate" &lt; "l_receiptdate"
                    )
                GROUP BY
                    "o_orderpriority"
                ORDER BY
                    "o_orderpriority"
            </statement>
        </procedure>

        <procedure name="Q5">
            <statement name="query_stmt">
                SELECT
                    "n_name",
                    SUM("l_extendedprice" * (1 - "l_discount")) AS revenue
                FROM
                    "benchbase"."customer",
                    "benchbase"."orders",
                    "benchbase"."lineitem",
                    "benchbase"."supplier",
                    "benchbase"."nation",
                    "benchbase"."region"
                WHERE
                    "c_custkey" = "o_custkey"
                    AND "l_orderkey" = "o_orderkey"
                    AND "l_suppkey" = "s_suppkey"
                    AND "c_nationkey" = "s_nationkey"
                    AND "s_nationkey" = "n_nationkey"
                    AND "n_regionkey" = "r_regionkey"
                    AND "r_name" = (CAST(? AS VARCHAR))
                    AND "o_orderdate" >= TO_DATE(?, 'YYYY-MM-DD')
                    AND "o_orderdate" &lt; TO_DATE(?, 'YYYY-MM-DD') + INTERVAL '1' YEAR
                GROUP BY
                    "n_name"
                ORDER BY
                    2 DESC
            </statement>
        </procedure>

        <procedure name="Q6">
            <statement name="query_stmt">
                SELECT
                    SUM("l_extendedprice" * "l_discount") AS revenue
                FROM
                    "benchbase"."lineitem"
                WHERE
                    "l_shipdate" &gt;= TO_DATE(?, 'YYYY-MM-DD')
                    AND "l_shipdate" &lt; TO_DATE(?, 'YYYY-MM-DD') + INTERVAL '1' YEAR
                    AND "l_discount" BETWEEN ? - 0.01 AND ? + 0.01
                    AND "l_quantity" &lt; ?
            </statement>
        </procedure>

        <procedure name="Q7">
            <statement name="query_stmt">
                SELECT
                    supp_nation,
                    cust_nation,
                    l_year,
                    SUM(volume) AS revenue
                FROM
                    (
                    SELECT
                        n1."n_name" AS supp_nation,
                        n2."n_name" AS cust_nation,
                        EXTRACT(YEAR
                            FROM "l_shipdate") AS l_year,
                        "l_extendedprice" * (1 - "l_discount") AS volume
                    FROM
                        "benchbase"."supplier",
                        "benchbase"."lineitem",
                        "benchbase"."orders",
                        "benchbase"."customer",
                        "benchbase"."nation" n1,
                        "benchbase"."nation" n2
                    WHERE
                        "s_suppkey" = "l_suppkey"
                        AND "o_orderkey" = "l_orderkey"
                        AND "c_custkey" = "o_custkey"
                        AND "s_nationkey" = n1."n_nationkey"
                        AND "c_nationkey" = n2."n_nationkey"
                        AND
                        (
                            (n1."n_name" = ? AND n2."n_name" = ?)
                            OR
                            (n1."n_name" = ? AND n2."n_name" = ?)
                        )
                        AND "l_shipdate" BETWEEN DATE '1995-01-01' AND DATE '1996-12-31'
                    )
                    AS shipping
                GROUP BY
                    supp_nation,
                    cust_nation,
                    l_year
                ORDER BY
                    1,
                    2,
                    3
            </statement>
        </procedure>

        <procedure name="Q8">
            <statement name="query_stmt">
                SELECT
                    o_year,
                    SUM(
                        CASE
                            WHEN
                                nation = ?
                            THEN
                                volume
                            ELSE
                                0
                        END
                    ) / SUM(volume) AS mkt_share
                FROM
                    (
                        SELECT
                            EXTRACT(YEAR
                                FROM
                                    "o_orderdate") AS o_year,
                            "l_extendedprice" * (1 - "l_discount") AS volume,
                            n2."n_name" AS nation
                        FROM
                            "benchbase"."part",
                            "benchbase"."supplier",
                            "benchbase"."lineitem",
                            "benchbase"."orders",
                            "benchbase"."customer",
                            "benchbase"."nation" n1,
                            "benchbase"."nation" n2,
                            "benchbase"."region"
                        WHERE
                            "p_partkey" = "l_partkey"
                            AND "s_suppkey" = "l_suppkey"
                            AND "l_orderkey" = "o_orderkey"
                            AND "o_custkey" = "c_custkey"
                            AND "c_nationkey" = n1."n_nationkey"
                            AND n1."n_regionkey" = "r_regionkey"
                            AND "r_name" = ?
                            AND "s_nationkey" = n2."n_nationkey"
                            AND "o_orderdate" BETWEEN DATE '1995-01-01' AND DATE '1996-12-31'
                            AND "p_type" = ?
                    )
                    AS all_nations
                GROUP BY
                    o_year
                ORDER BY
                    1
            </statement>
        </procedure>

        <procedure name="Q9">
            <statement name="query_stmt">
                SELECT
                    nation,
                    o_year,
                    SUM(amount) AS sum_profit
                FROM
                    (
                    SELECT
                        "n_name" AS nation,
                        EXTRACT(YEAR
                            FROM
                            "o_orderdate") AS o_year,
                        "l_extendedprice" * (1 - "l_discount") - "ps_supplycost" * "l_quantity" AS amount
                    FROM
                        "benchbase"."part",
                        "benchbase"."supplier",
                        "benchbase"."lineitem",
                        "benchbase"."partsupp",
                        "benchbase"."orders",
                        "benchbase"."nation"
                    WHERE
                        "s_suppkey" = "l_suppkey"
                        AND "ps_suppkey" = "l_suppkey"
                        AND "ps_partkey" = "l_partkey"
                        AND "p_partkey" = "l_partkey"
                        AND "o_orderkey" = "l_orderkey"
                        AND "s_nationkey" = "n_nationkey"
                        AND "p_name" LIKE ?
                    )
                    AS profit
                GROUP BY
                    nation,
                    o_year
                ORDER BY
                    nation,
                    o_year DESC
            </statement>
        </procedure>

        <procedure name="Q10">
            <statement name="query_stmt">
                SELECT
                    "c_custkey",
                    "c_name",
                    SUM("l_extendedprice" * (1 - "l_discount")) AS revenue,
                    "c_acctbal",
                    "n_name",
                    "c_address",
                    "c_phone",
                    "c_comment"
                FROM
                    "benchbase"."customer",
                    "benchbase"."orders",
                    "benchbase"."lineitem",
                    "benchbase"."nation"
                WHERE
                    "c_custkey" = "o_custkey"
                    AND "l_orderkey" = "o_orderkey"
                    AND "o_orderdate" >= TO_DATE(?, 'YYYY-MM-DD')
                    AND "o_orderdate" &lt; TO_DATE(?, 'YYYY-MM-DD') + INTERVAL '3' MONTH
                    AND "l_returnflag" = 'R'
                    AND "c_nationkey" = "n_nationkey"
                GROUP BY
                    "c_custkey",
                    "c_name",
                    "c_acctbal",
                    "c_phone",
                    "n_name",
                    "c_address",
                    "c_comment"
                ORDER BY
                    3 DESC LIMIT 20
            </statement>
        </procedure>

        <procedure name="Q11">
            <statement name="query_stmt">
                SELECT
                    "ps_partkey",
                    SUM("ps_supplycost" * "ps_availqty") AS "VALUE"
                FROM
                    "benchbase"."partsupp",
                    "benchbase"."supplier",
                    "benchbase"."nation"
                WHERE
                    "ps_suppkey" = "s_suppkey"
                    AND "s_nationkey" = "n_nationkey"
                    AND "n_name" = ?
                GROUP BY
                    "ps_partkey"
                HAVING
                    SUM("ps_supplycost" * "ps_availqty") > (
                        SELECT
                            SUM("ps_supplycost" * "ps_availqty") * ?
                        FROM
                            "benchbase"."partsupp", "benchbase"."supplier", "benchbase"."nation"
                        WHERE
                            "ps_suppkey" = "s_suppkey"
                            AND "s_nationkey" = "n_nationkey"
                            AND "n_name" = ? )
                ORDER BY
                    1 DESC
            </statement>
        </procedure>

        <procedure name="Q12">
            <statement name="query_stmt">
                SELECT
                    "l_shipmode",
                    SUM(
                        CAST(CASE
                            WHEN
                                "o_orderpriority" = '1-URGENT' OR "o_orderpriority" = '2-HIGH'
                            THEN
                                1
                            ELSE
                                0
                        END AS NUMERIC)
                    ) AS high_line_count,
                    SUM(
                        CAST(CASE
                            WHEN
                                "o_orderpriority" &lt;> '1-URGENT' AND "o_orderpriority" &lt;> '2-HIGH'
                            THEN
                                1
                            ELSE
                                0
                        END AS NUMERIC)
                    ) AS low_line_count
                FROM
                    "benchbase"."orders",
                    "benchbase"."lineitem"
                WHERE
                    "o_orderkey" = "l_orderkey"
                    AND "l_shipmode" IN (?, ?)
                    AND "l_commitdate" &lt; "l_receiptdate"
                    AND "l_shipdate" &lt; "l_commitdate"
                    AND "l_receiptdate" >= TO_DATE(?, 'YYYY-MM-DD')
                    AND "l_receiptdate" &lt; TO_DATE(?, 'YYYY-MM-DD') + INTERVAL '1' YEAR
                GROUP BY
                    "l_shipmode"
                ORDER BY
                    "l_shipmode"
            </statement>
        </procedure>

        <procedure name="Q13">
            <statement name="query_stmt">
                SELECT
                    c_count,
                    COUNT(*) AS custdist
                FROM
                (
                    SELECT
                        "c_custkey",
                        COUNT("o_orderkey") AS c_count
                    FROM
                        "benchbase"."customer"
                        LEFT OUTER JOIN
                            "benchbase"."orders"
                            ON "c_custkey" = "o_custkey"
                            AND "o_comment" NOT LIKE ?
                    GROUP BY
                        "c_custkey"
                )
                AS c_orders
                GROUP BY
                    c_count
                ORDER BY
                    2 DESC,
                    1 DESC
            </statement>
        </procedure>

        <procedure name="Q14">
            <statement name="query_stmt">
                SELECT
                    100.00 * SUM(
                        CAST(CASE
                            WHEN
                                "p_type" LIKE 'PROMO%'
                            THEN
                                "l_extendedprice" * (1 - "l_discount")
                            ELSE
                                0
                        END AS NUMERIC)
                    ) / SUM("l_extendedprice" * (1 - "l_discount")) AS promo_revenue
                    FROM
                        "benchbase"."lineitem", "benchbase"."part"
                    WHERE
                        "l_partkey" = "p_partkey"
                        AND "l_shipdate" >= TO_DATE(?, 'YYYY-MM-DD')
                        AND "l_shipdate" &lt; TO_DATE(?, 'YYYY-MM-DD') + INTERVAL '1' MONTH
            </statement>
        </procedure>

        <procedure name="Q15">
            <statement name="query_stmt">
                SELECT true
            </statement>
            <statement name="createview_stmt">
                SELECT true
            </statement>
            <statement name="dropview_stmt">
                SELECT true
            </statement>
        </procedure>

        <procedure name="Q16">
            <statement name="query_stmt">
                SELECT ?, ?, ?, ?, ?, ?, ?, ?, ?, ?
            </statement>
        </procedure>

        <procedure name="Q17">
            <statement name="query_stmt">
                SELECT
                    CAST((SUM("l_extendedprice") / 7.0) AS NUMERIC) AS avg_yearly
                FROM
                    "benchbase"."lineitem",
                    "benchbase"."part"
                WHERE
                    "p_partkey" = "l_partkey"
                    AND "p_brand" = ?
                    AND "p_container" = ?
                    AND "l_quantity" &lt; (
                        SELECT
                        0.2 * AVG("l_quantity")
                        FROM
                        "benchbase"."lineitem"
                        WHERE
                        "l_partkey" = "p_partkey" )
            </statement>
        </procedure>

        <procedure name="Q18">
            <statement name="query_stmt">
                SELECT
                "c_name",
                "c_custkey",
                "o_orderkey",
                "o_orderdate",
                "o_totalprice",
                SUM("l_quantity")
                FROM
                "benchbase"."customer",
                "benchbase"."orders",
                "benchbase"."lineitem"
                WHERE
                "o_orderkey" IN
                (
                SELECT
                "l_orderkey"
                FROM
                "benchbase"."lineitem"
                GROUP BY
                "l_orderkey"
                HAVING
                SUM("l_quantity") &gt; ?
                )
                AND "c_custkey" = "o_custkey"
                AND "o_orderkey" = "l_orderkey"
                GROUP BY
                "c_name",
                "c_custkey",
                "o_orderkey",
                "o_orderdate",
                "o_totalprice"
                ORDER BY
                "o_totalprice" DESC,
                "o_orderdate" LIMIT 100
            </statement>
        </procedure>

        <procedure name="Q19">
            <statement name="query_stmt">
                SELECT
                SUM("l_extendedprice"* (1 - "l_discount")) AS revenue
                FROM
                "benchbase"."lineitem",
                "benchbase"."part"
                WHERE
                (
                "p_partkey" = "l_partkey"
                AND "p_brand" = ?
                AND "p_container" IN ('SM CASE', 'SM BOX', 'SM PACK', 'SM PKG')
                AND "l_quantity" &gt;= ?
                AND "l_quantity" &lt;= ? + 10
                AND "p_size" BETWEEN 1 AND 5
                AND "l_shipmode" IN ('AIR', 'AIR REG')
                AND "l_shipinstruct" = 'DELIVER IN PERSON'
                )
                OR
                (
                "p_partkey" = "l_partkey"
                AND "p_brand" = ?
                AND "p_container" IN ('MED BAG', 'MED BOX', 'MED PKG', 'MED PACK')
                AND "l_quantity" &gt;= ?
                AND "l_quantity" &lt;= ? + 10
                AND "p_size" BETWEEN 1 AND 10
                AND "l_shipmode" IN ('AIR', 'AIR REG')
                AND "l_shipinstruct" = 'DELIVER IN PERSON'
                )
                OR
                (
                "p_partkey" = "l_partkey"
                AND "p_brand" = ?
                AND "p_container" IN ('LG CASE', 'LG BOX', 'LG PACK', 'LG PKG')
                AND "l_quantity" &gt;= ?
                AND "l_quantity" &lt;= ? + 10
                AND "p_size" BETWEEN 1 AND 15
                AND "l_shipmode" IN ('AIR', 'AIR REG')
                AND "l_shipinstruct" = 'DELIVER IN PERSON'
                )
            </statement>
        </procedure>

        <procedure name="Q20">
            <statement name="query_stmt">
                SELECT
                    "s_name",
                    "s_address"
                FROM
                    "benchbase"."supplier",
                    "benchbase"."nation"
                WHERE
                    "s_suppkey" IN
                (
                SELECT
                    "ps_suppkey"
                FROM
                    "benchbase"."partsupp"
                WHERE
                    "ps_partkey" IN
                    (
                        SELECT
                            "p_partkey"
                        FROM
                            "benchbase"."part"
                        WHERE
                            "p_name" LIKE ?
                    )
                    AND "ps_availqty" &gt; (
                        SELECT
                            0.5 * SUM("l_quantity")
                        FROM
                            "benchbase"."lineitem"
                        WHERE
                            "l_partkey" = "ps_partkey"
                            AND "l_suppkey" = "ps_suppkey"
                            AND "l_shipdate" &gt;= TO_DATE(?, 'YYYY-MM-DD')
                            AND "l_shipdate" &lt; TO_DATE(?, 'YYYY-MM-DD') + INTERVAL '1' YEAR )
                    )
                    AND "s_nationkey" = "n_nationkey"
                    AND "n_name" = ?
                ORDER BY
                    "s_name"
            </statement>
        </procedure>

        <procedure name="Q21">
            <statement name="query_stmt">
                SELECT
                    "s_name",
                    COUNT(*) AS numwait
                FROM
                    "benchbase"."supplier",
                    "benchbase"."lineitem" l1,
                    "benchbase"."orders",
                    "benchbase"."nation"
                WHERE
                    "s_suppkey" = l1."l_suppkey"
                    AND "o_orderkey" = l1."l_orderkey"
                    AND "o_orderstatus" = 'F'
                    AND l1."l_receiptdate" > l1."l_commitdate"
                    AND EXISTS
                    (
                        SELECT
                            *
                        FROM
                            "benchbase"."lineitem" l2
                        WHERE
                            l2."l_orderkey" = l1."l_orderkey"
                            AND l2."l_suppkey" &lt;> l1."l_suppkey"
                    )
                    AND NOT EXISTS
                    (
                        SELECT
                            *
                        FROM
                            "benchbase"."lineitem" l3
                        WHERE
                            l3."l_orderkey" = l1."l_orderkey"
                            AND l3."l_suppkey" &lt;> l1."l_suppkey"
                            AND l3."l_receiptdate" > l3."l_commitdate"
                    )
                    AND "s_nationkey" = "n_nationkey"
                    AND "n_name" = ?
                GROUP BY
                    "s_name"
                ORDER BY
                    2 DESC,
                    "s_name" LIMIT 100
            </statement>
        </procedure>

        <procedure name="Q22">
            <statement name="query_stmt">
                SELECT
                    cntrycode,
                    COUNT(*) AS numcust,
                    SUM("c_acctbal") AS totacctbal
                FROM
                (
                    SELECT
                        SUBSTRING("c_phone" FROM 1 FOR 2) AS cntrycode,
                        "c_acctbal"
                    FROM
                        "benchbase"."customer"
                    WHERE
                        SUBSTRING("c_phone" FROM 1 FOR 2) IN (?, ?, ?, ?, ?, ?, ?)
                        AND "c_acctbal" >
                        (
                            SELECT
                                AVG("c_acctbal")
                            FROM
                                "benchbase"."customer"
                            WHERE
                                "c_acctbal" > 0.00
                                AND SUBSTRING("c_phone" FROM 1 FOR 2) IN (?, ?, ?, ?, ?, ?, ?)
                        )
                        AND NOT EXISTS
                        (
                            SELECT
                                *
                            FROM
                                "benchbase"."orders"
                            WHERE
                                "o_custkey" = "c_custkey"
                        )
                )
                AS custsale
                GROUP BY
                    cntrycode
                ORDER BY
                    1
            </statement>
        </procedure>

    </dialect>
</dialects>
